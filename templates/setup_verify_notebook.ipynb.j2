{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pyspark\n",
    "from pyspark.sql import SparkSession\n",
    "\n",
    "## DEFINE SENSITIVE VARIABLES\n",
    "POLARIS_URI = 'http://polaris:8181/api/catalog'\n",
    "POLARIS_CATALOG_NAME = '{{polaris_catalog_name}}'\n",
    "POLARIS_CREDENTIALS = '{{principal_client_id}}:{{principal_client_secret}}'\n",
    "POLARIS_SCOPE = 'PRINCIPAL_ROLE:ALL'\n",
    "\n",
    "conf = (\n",
    "    pyspark.SparkConf()\n",
    "        .setAppName('polaris_demo')\n",
    {% if use_maven_mirror == '3.0' %}
    "        .set('spark.jars.ivySettings','/conf/ivy_settings.xml')\n",
    {% endif %}
    "  \t\t#packages\n",
    "        .set('spark.jars.packages', 'org.apache.iceberg:iceberg-spark-runtime-3.5_2.12:1.7.1,org.apache.hadoop:hadoop-aws:3.4.0')\n",
    "  \t\t#SQL Extensions\n",
    "        .set('spark.sql.extensions', 'org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions')\n",
    "  \t\t#Configuring Catalog\n",
    "        .set('spark.sql.catalog.polardb.warehouse', POLARIS_CATALOG_NAME)\n",
    "        .set('spark.sql.catalog.polardb.header.X-Iceberg-Access-Delegation', 'vended-credentials')\n",
    "        .set('spark.sql.catalog.polardb', 'org.apache.iceberg.spark.SparkCatalog')\n",
    "        .set('spark.sql.catalog.polardb.catalog-impl', 'org.apache.iceberg.rest.RESTCatalog')\n",
    "        .set('spark.sql.catalog.polardb.uri', POLARIS_URI)\n",
    "        .set('spark.sql.catalog.polardb.credential', POLARIS_CREDENTIALS)\n",
    "        .set('spark.sql.catalog.polardb.scope', POLARIS_SCOPE)\n",
    "        .set('spark.sql.catalog.polardb.token-refresh-enabled', 'true')\n",
    "        .set('spark.hadoop.fs.permissions.umask-mode','002')\n",
    "        \n",
    ")\n",
    "\n",
    "## Start Spark Session\n",
    "spark = SparkSession.builder.config(conf=conf).getOrCreate()\n",
    "print(\"Spark Running\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "spark.sql(\"USE polardb\")\n",
    "spark.sql(\"CREATE NAMESPACE IF NOT EXISTS veggies\")\n",
    "spark.sql(\"CREATE NAMESPACE IF NOT EXISTS veggies.plantae\")\n",
    "spark.sql(\"USE NAMESPACE veggies.plantae\")\n",
    "spark.sql(\"\"\"\n",
    "\tCREATE TABLE IF NOT EXISTS fruits (\n",
    "\t\tid BIGINT, name STRING, season STRING\n",
    "\t)\n",
    "USING ICEBERG\n",
    "\"\"\").show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Insert Values\n",
    "spark.sql(\"INSERT INTO veggies.plantae.fruits VALUES (1,'mango','summer'), (2,'banana','all')\").show()\n",
    "spark.sql(\"SELECT * FROM veggies.plantae.fruits\").show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
